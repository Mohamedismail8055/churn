# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12g5vTVxCcnlaHpXO8_HeYmX9fKJFjqoe
"""

import streamlit as st
import pandas as pd
import pickle
import numpy as np

# Load the trained model
with open("model.pkl", "rb") as model_file:
    model = pickle.load(model_file)

# Function for prediction
def predict_churn(input_data):
    df = pd.DataFrame([input_data])
    prediction = model.predict(df)[0]
    probability = model.predict_proba(df)[0][1]
    return prediction, probability

# Streamlit UI
st.title("Telecom Churn Prediction App")
st.write("Enter customer details to predict churn probability.")

# User inputs (Modify based on actual features used in the model)
age = st.number_input("Age", min_value=18, max_value=100, value=30)
tenure = st.number_input("Tenure (months)", min_value=0, max_value=100, value=24)
monthly_charge = st.number_input("Monthly Charge ($)", min_value=0.0, max_value=500.0, value=50.0)
total_charge = st.number_input("Total Charge ($)", min_value=0.0, max_value=5000.0, value=1200.0)
contract_type = st.selectbox("Contract Type", ["Month-to-month", "One year", "Two year"])

data = {
    "Age": age,
    "Tenure": tenure,
    "MonthlyCharge": monthly_charge,
    "TotalCharge": total_charge,
    "ContractType": contract_type,
}

if st.button("Predict Churn"):
    prediction, probability = predict_churn(data)
    if prediction == 1:
        st.error(f"This customer is likely to churn. (Probability: {probability:.2f})")
    else:
        st.success(f"This customer is unlikely to churn. (Probability: {probability:.2f})")